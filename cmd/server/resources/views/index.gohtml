{{define "content"}}
    <form action="/uploadfile" enctype="multipart/form-data" method="post" class="uploader" id="uploader">
        <p>Upload files</p>
        <input type="file" id="fileElem" multiple onchange="handleFiles(this.files)">
        <label class="button" for="fileElem">Browse</label>
    </form>
    <div class="uploaded"></div>
        <script>
            let mainElement = document.getElementsByClassName("content")[0]
            let dropArea = document.getElementById('uploader');
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, preventDefaults, false)
            });
            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, highlight, false)
            });
            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, unhighlight, false)
            });
            dropArea.addEventListener('drop', handleDrop, false)
            function preventDefaults (e) {
                e.preventDefault()
                e.stopPropagation()
            }
            function highlight() {
                dropArea.classList.add('highlight')
            }
            function unhighlight() {
                dropArea.classList.remove('highlight')
            }
            function handleDrop(e) {
                let dt = e.dataTransfer
                let files = dt.files

                handleFiles(files)
            }
            function handleFiles(files) {
                ([...files]).forEach(file => {
                    uploadFile(file)
                })
            }
            function uploadFile(file) {
                let progressBar = document.createElement("progress")
                progressBar.setAttribute("max", "100")
                progressBar.setAttribute("value", "0")
                mainElement.appendChild(progressBar)
                let url = '/uploadfile'
                let formData = new FormData()
                formData.append('file', file)
                function handleProgress(event, progressBar) {
                    progressBar.value = event.loaded / event.total * 100
                }
                function progressDone(progressBar, response) {
                    let newElement = document.createElement("p")
                    newElement.textContent = "Uploaded: " + response.data
                    progressBar.replaceWith(newElement)
                }
                axios({
                    method: 'post',
                    url: url,
                    data: formData,
                    onUploadProgress: event => handleProgress(event, progressBar)
                })
                    .then((response) => progressDone(progressBar, response))
                    .catch(() => { /* Error. Inform the user */ })
            }
        </script>
{{end}}